"use strict";angular.module("clientApp",["ngCookies","ngResource","ngSanitize","ngRoute","ngAnimate","ui.router"]).config(["$httpProvider",function(a){var b=["$location","$rootScope","$q",function(a,b,c){function d(a){return a}function e(d){return 401===d.status?(b.$broadcast("event:unauthorized"),a.path("/login"),d):c.reject(d)}return function(a){return a.then(d,e)}}];a.responseInterceptors.push(b)}]).config(function(a,b){b.otherwise("/"),a.state("home",{url:"/",templateUrl:"views/main.html",controller:"MainCtrl"}).state("about",{url:"/about",templateUrl:"views/about.html"}).state("login",{url:"/login",templateUrl:"views/login.html",controller:"LoginCtrl"})}),angular.module("clientApp").controller("MainCtrl",["$scope","authFactory","messageFactory","Stage","Project",function(a,b,c,d,e){c.getMessage().then(function(b){a.message=b.data.message}),console.log("If not "+!b.currentUser()),b.currentUser()||b.getUser().then(function(){a.currentUser=b.currentUser()},null),a.stages=d.index({},function(){},function(a){401===a.status&&console.log("not auth.")}),a.projects=e.index({},function(){},function(a){401===a.status&&console.log("not auth.")}),console.log(a.stages),a.hotspot=d.show({id:73},function(){},function(a){401===a.status&&console.log("not auth.")}),a.createStage=function(){e.create({title:"Project 1"})}}]),angular.module("clientApp").factory("messageFactory",["$http",function(a){var b="/api/v1/";return{getMessage:function(){return a.get(b+"greet")}}}]),angular.module("clientApp").factory("Stage",["$resource",function(a){return a("/api/v1/stages/:id",{id:"@id"},{create:{method:"POST"},index:{method:"GET",isArray:!0},show:{method:"GET",isArray:!1},update:{method:"PUT"},destroy:{method:"DELETE"}})}]),angular.module("clientApp").factory("Hotspot",["$resource",function(a){return a("/api/v1/hotspots/:id",{id:"@id"},{create:{method:"POST"},index:{method:"GET",isArray:!0},show:{method:"GET",isArray:!1},update:{method:"PUT"},destroy:{method:"DELETE"}})}]),angular.module("clientApp").controller("NavbarCtrl",["$scope","$location",function(a,b){a.isActive=function(a){var c=a===b.path();return c}}]),angular.module("clientApp").controller("LoginCtrl",["$scope","$http","authFactory",function(a,b,c){a.loginUser={email:null,password:null},a.loginError={message:null,errors:{}},a.registerUser={email:null,password:null,password_confirmation:null},a.registerError={message:null,errors:{}},a.login=function(){a.submit({method:"POST",url:"/api/v1/users/sign_in.json",data:{user:{email:a.loginUser.email,password:a.loginUser.password}},successMessage:"You have been logged in.",errorEntity:a.loginError})},a.logout=function(){a.submit({method:"DELETE",url:"/api/v1/users/sign_out.json",successMessage:"You have been logged out.",errorEntity:a.loginError})},a.passwordReset=function(){a.submit({method:"POST",url:"/api/v1/users/password.json",data:{user:{email:a.loginUser.email}},successMessage:"Reset instructions have been sent to your e-mail address.",errorEntity:a.loginError})},a.register=function(){a.submit({method:"POST",url:"/api/v1/users.json",data:{user:{email:a.registerUser.email,password:a.registerUser.password,password_confirmation:a.registerUser.password_confirmation}},successMessage:"You have been registered and logged in.",errorEntity:a.registerError})},a.changePassword=function(){a.submit({method:"PUT",url:"/api/v1/users/password.json",data:{user:{email:a.registerUser.email,password:a.registerUser.password,password_confirmation:a.registerUser.password_confirmation}},successMessage:"Your password has been updated.",errorEntity:a.registerError})},a.submit=function(d){a.resetMessages(),b({method:d.method,url:d.url,data:d.data}).success(function(b,e){201===e||204===e?(d.errorEntity.message=d.successMessage,c.currentUser(a.loginUser.email||a.registerUser.email),a.resetUsers()):d.errorEntity.message=b.error?b.error:"Success, but with an unexpected success code, potentially a server error, please report via support channels as this indicates a code defect.  Server response was: "+JSON.stringify(b)}).error(function(a,b){422===b?d.errorEntity.errors=a.errors:d.errorEntity.message=a.error?a.error:"Unexplained error, potentially a server error, please report via support channels as this indicates a code defect.  Server response was: "+JSON.stringify(a)})},a.resetMessages=function(){a.loginError.message=null,a.loginError.errors={},a.registerError.message=null,a.registerError.errors={}},a.resetUsers=function(){a.loginUser.email=null,a.loginUser.password=null,a.registerUser.email=null,a.registerUser.password=null,a.registerUser.password_confirmation=null}}]),angular.module("clientApp").factory("authFactory",["$http",function(a){var b,c;return{getUser:function(){return a({method:"GET",url:"/api/v1/users/current"}).success(function(a){console.log("success "+a.email),b=a}).error(function(a){c=a.error})},currentUser:function(a){return 1!==arguments.length?b:void(b=a)}}}]),angular.module("clientApp").factory("Project",["$resource",function(a){return a("/api/v1/projects/:id",{id:"@id"},{create:{method:"POST"},index:{method:"GET",isArray:!0},show:{method:"GET",isArray:!1},update:{method:"PUT"},destroy:{method:"DELETE"}})}]);